// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER") // Can be "USER" or "ADMIN"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  items     Items[]
  orders    Orders[]
  wishlists Wishlists[]
}

model Items {
  id          String   @id @default(uuid())
  title       String
  description String
  price       Float
  size        String
  category    String   // New field for category
  condition   String
  photoUrl    String
  status      String   @default("available") // available, sold, reserved
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId      String
  user        Users     @relation(fields: [userId], references: [id])
  orderItems  OrderItems[]
  wishlistItems WishlistItems[]
}

model Orders {
  id        String   @id @default(uuid())
  status    String   // pending, completed, cancelled
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId    String
  user      Users     @relation(fields: [userId], references: [id])
  items     OrderItems[]
}

model OrderItems {
  id        String   @id @default(uuid())
  quantity  Int
  price     Float
  createdAt DateTime @default(now())

  // Relations
  orderId   String
  order     Orders    @relation(fields: [orderId], references: [id])
  itemId    String
  item      Items     @relation(fields: [itemId], references: [id])
}

model Wishlists {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId    String
  user      Users     @relation(fields: [userId], references: [id])
  items     WishlistItems[]
}

model WishlistItems {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())

  // Relations
  wishlistId String
  wishlist   Wishlists @relation(fields: [wishlistId], references: [id])
  itemId     String
  item       Items     @relation(fields: [itemId], references: [id])
} 